/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package com.mycompany.chessapp;

import java.awt.Color;
import java.awt.Container;
import java.awt.Dimension;
import java.awt.GridLayout;
import java.awt.Insets;
import javax.swing.Icon;
import javax.swing.ImageIcon;
import javax.swing.JButton;
import javax.swing.JFrame;
import javax.swing.JPanel;

/**
 *
 * @author jehow
 */
public class ChessApp1 extends javax.swing.JFrame {

   
    Board board;
//    GridLayout layout = new GridLayout(8, 8);

    /**
     * Creates new form ChessApp
     */
    public ChessApp1() {
        initComponents();
//        boardPanel = new JPanel(new GridLayout(8, 8)); // 8x8 chessboard
        board = new Board();
        boardPanel.setVisible(true);
        fillGrid();

//        square00.setMargin(new Insets(0, 0, 0, 0));
//        square00.setBorderPainted(false);
//        square00.setFocusPainted(false);
//        square00.setContentAreaFilled(true);
//        square00.setOpaque(true);
        Square sq = board.getSquare(0, 0);
        Piece p = sq.getPiece();
//        square00.setIcon(new ImageIcon(p.getImage()));
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        boardPanel = new javax.swing.JPanel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        boardPanel.setBackground(new java.awt.Color(204, 204, 255));
        boardPanel.setLayout(new java.awt.GridLayout());
        boardPanel.setLayout(new java.awt.GridLayout(8,8));

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(boardPanel, javax.swing.GroupLayout.DEFAULT_SIZE, 1244, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addComponent(boardPanel, javax.swing.GroupLayout.DEFAULT_SIZE, 647, Short.MAX_VALUE)
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(ChessApp1.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(ChessApp1.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(ChessApp1.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(ChessApp1.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new ChessApp1().setVisible(true);
//                ChessApp app = new ChessApp();
//                app.setDefaultCloseOperation(JFrame.EXIT_ON_CLOSE);
//                app.createBoard(app.getContentPane());
//
//                app.setVisible(true);
            }
        });
    }

//    public void createBoard(final Container panel) {
//        boardPanel = new JPanel();
//        boardPanel.setLayout(layout);
//
//        JButton b = new JButton();
//        Dimension buttonSize = new Dimension(80, 80);
//        boardPanel.setPreferredSize(buttonSize);
//        for (int i = 0; i < 64; i++) {
//            boardPanel.add(new JButton());
//        }
//
//        panel.add(boardPanel);
//
//    }

    public void fillGrid() {
        for (int row = 0; row < 8; row++) {
            for (int col = 0; col < 8; col++) {
                JButton square = new JButton();
                square.setVisible(true);
                square.setOpaque(true);
                Square sq = board.getSquare(row, col);
                if (!(sq.getPiece() == null)) {
                    Piece p = sq.getPiece();
                    square.setIcon(new ImageIcon(p.getImage()));
                }

                // Example: alternate colors for board
                if ((row + col) % 2 == 0) {
                    square.setBackground(new Color(240, 217, 181)); // white
                } else {
                    square.setBackground(new Color(101, 67, 33)); // black
                }

                boardPanel.add(square);
            }
        }
    }
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JPanel boardPanel;
    // End of variables declaration//GEN-END:variables
}
